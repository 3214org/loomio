.clearfix
  %span{ class: css_class_unread_group_activity_for(discussion, current_user)}
  %div{ class: css_class_unread_discussion_activity_for(discussion, current_user) }
    %a.selector-link{ href: discussion_path(discussion) }
      - if user_signed_in? && discussion.current_motion
        .vote-icon
          - if current_user.group_membership(this_group) || this_group.nil?
            = render "motions/display_icons", position: current_user.position(discussion.current_motion)
      .discussion-title
        = truncate(discussion.title, :length => 60, :separator => ' ')
        .group-name= DiscussionDecorator.new(discussion).display_group_name(this_group)
      - if discussion.current_motion
        - motion_activity = motion_activity_count_for(discussion.current_motion, current_user)
        - pop_over_title = render "discussions/graph_preview_pop_over_title", discussion: discussion
        - pop_over_body = render "discussions/graph_preview_pop_over", discussion: discussion, user: current_user, motion_activity: motion_activity
        .pie{"id" => "graph_#{discussion.current_motion.id}", "title" => pop_over_title, "data-content" => pop_over_body}
          - if discussion.current_motion.voting? && motion_activity > 0
            %span.activity-count.label.label-important
              = motion_activity
      - else
        .large-icon.pie-icon.activity-icon
      .large-icon.discussion-icon.activity-icon{ class: enabled_icon_class_for(discussion, current_user) }
        - discussion_activity = discussion_activity_count_for(discussion, current_user)
        - if discussion_activity > 0
          %span.activity-count.label.label-important
            = discussion_activity
      .discussion-date-info
        - if discussion.current_motion_close_date
          .proposal-close-date= "#{time_ago_in_words(discussion.current_motion_close_date)} until close"
        - else
          .latest-comment-time= "#{time_ago_in_words(discussion.latest_comment_time)} ago"

- if discussion.current_motion
  :coffeescript
    $ ->
      # Display vote graph
      @pie_graph_view = new Loomio.Views.Utils.GraphView
        el: '.pie'
        id_string: "graph_#{discussion.current_motion.id}"
        legend: false
        data: #{discussion.current_motion.votes_graph_ready.to_json.html_safe}
        type: 'pie'
        tooltip_selector: '#tooltip'
        diameter: 25
        padding: 1
        gap: 1
        shadow: 0.75
